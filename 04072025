/**
 * @param {string} s
 * @param {string} t
 * @return {boolean}
 */
var isAnagram = function(s, t) {
    if (s.length !== t.length) return false;

    const freq = {};

    for (let i = 0; i < s.length; i++) {
        const charS = s[i];
        const charT = t[i];

        freq[charS] = (freq[charS] || 0) + 1;
        freq[charT] = (freq[charT] || 0) - 1;
    }

    // If all counts are 0, it's an anagram
    for (let key in freq) {
        if (freq[key] !== 0) return false;
    }

    return true;
};
/**
 * @param {string} s
 * @return {boolean}
 */
var validPalindrome = function(s) {
    let start = 0;
    let end = s.length - 1;

    while (start < end) {
        if (s[start] === s[end]) {
            start++;
            end--;
        } else {
            // Try skipping start or skipping end
            return isPalindrome(s, start + 1, end) || isPalindrome(s, start, end - 1);
        }
    }
    return true;
};

function isPalindrome(str, left, right) {
    while (left < right) {
        if (str[left] !== str[right]) return false;
        left++;
        right--;
    }
    return true;
}
